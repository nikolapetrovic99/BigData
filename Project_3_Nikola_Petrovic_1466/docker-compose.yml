version: "3.9"


networks:
  bde:
    external: true

services:
  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - bde

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - bde

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    depends_on:
      - kafka
    environment:
      SCRIPT: producer/producer.py
      DATA: data/2016Q1-capitalbikeshare-tripdata.csv
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC1: bikes-spark
      KAFKA_TOPIC2: bikes-flink
      KAFKA_INTERVAL: 10
    networks:
      - bde

  spark-master:
    image: bde2020/spark-master:3.1.2-hadoop3.2
    container_name: spark-master
    ports:
      - "8070:8070"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8070
    networks:
      - bde

  spark-worker-1:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8071:8071"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - SPARK_WORKER_WEBUI_PORT=8071
    networks:
      - bde

  spark-worker-2:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8072:8071"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - SPARK_WORKER_WEBUI_PORT=8071
    networks:
      - bde


      
